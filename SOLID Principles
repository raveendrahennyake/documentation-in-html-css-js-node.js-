//SOLID Principles
**The SOLID design principles help us create maintainable, reusable, and flexible software designs. Each letter in the acronym SOLID stands for a specific principle.

S: Single responsibility principle.
O: Openâ€“closed principle.
L: Liskov substitution principle.
I: Interface segregation principle.
D: Dependency inversion principle

**Single responsibility principle.

 every class, module, or function in a program should have one responsibility/purpose in a program.

public class Students {

     public void registerStudents() {
       
     }

     public void calculate_Student_Results() {
        
     }

     public void sendEmail() {
         
     }

after use Single responsibility principle

public class StudentRegister () {
public void registerStudents() {
       
     }

}

public class Student_Results () {
public void calculate_Student_Results {
       
     }

}
public class StudentsendEmail () {
public void  sendEmail() {
       
     }

}










}
